{"version":3,"sources":["Images/memories.png","Components/Posts/Post/styles.js","constants/actionTypes.js","api/index.js","Components/Posts/Post/Post.js","actions/posts.js","Components/Posts/styles.js","Components/Posts/Posts.js","Components/Forms/styles.js","Components/Forms/Forms.js","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","Post","post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","component","message","CardActions","a","api","data","type","payload","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","find","p","useState","postData","setPostData","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","combineReducers","action","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4876ab3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundBlendMode: \"darken\",\r\n  },\r\n  border: {\r\n    border: \"solid\",\r\n  },\r\n  fullHeightCard: {\r\n    height: \"100%\",\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: \"15px\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    left: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  overlay2: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    right: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px\",\r\n  },\r\n  title: {\r\n    padding: \"0 16px\",\r\n  },\r\n  cardActions: {\r\n    padding: \"0 16px 8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE = 'LIKE';\r\n","import axios from \"axios\";\r\n\r\nconst url = \"http://localhost:5000/posts\";\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id,updatedPost) => axios.patch(`${url}/${id}`,updatedPost) ;\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`); \r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","import React from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from 'moment';\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts'\r\n\r\nconst Post = ({ post, setCurrentId}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={post.selectedFile}\r\n          title={post.title}\r\n        />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.creator}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        <div className={classes.overlay2}>\r\n          <Button style={{color:\"white\"}} size=\"small\" onClick={()=>setCurrentId(post._id)}>\r\n            <MoreHorizIcon fontSize=\"default\"/>\r\n          </Button>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\">{post.tags.map((tag)=>`#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography variant=\"h5\" className={classes.title} gutterBottom>{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> &nbsp; Like &nbsp; {post.likeCount} </Button>\r\n          <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n        </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actionTypes\";\r\n\r\nimport * as api from \"../api\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport useStyles from \"./styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n  const posts = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n\r\n\r\n  return !posts.length ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"streach\"\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={6}>\r\n          <Post post={post} setCurrentId={setCurrentId} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((p) => p._id === currentId) : null\r\n  );\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n    clear();\r\n  };\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.form} ${classes.root}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title  \"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          ></FileBase>\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"container\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          {\" \"}\r\n          SUBMIT\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          CLEAR{\" \"}\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  heading: {\r\n    color: \"rgba(0,183,255, 1)\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    mainContainer: {\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\r\nimport memories from \"./Images/memories.png\";\r\nimport Posts from \"./Components/Posts/Posts\";\r\nimport Form from \"./Components/Forms/Forms\";\r\nimport useStyles from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"./actions/posts\";\r\n\r\nconst App = () => {\r\n  const [currentId, setCurrentId] = useState(null)\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [currentId,dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\r\n          Memories\r\n        </Typography>\r\n        <img\r\n          className={classes.image}\r\n          src={memories}\r\n          alt=\"memories\"\r\n          height=\"60\"\r\n        />\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid\r\n            className={classes.mainContainer}\r\n            container\r\n            justify=\"space-between\"\r\n            alignItems=\"strech\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts  setCurrentId={setCurrentId}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId={currentId}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport posts from \"./posts\";\r\n\r\nexport default combineReducers({ posts });\r\n","import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    case UPDATE:\r\n    case LIKE:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport './index.css';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}